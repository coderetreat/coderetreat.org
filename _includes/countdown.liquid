{% assign direction = include.direction | default: "down" %}
{% assign name = include.name | default: "" %}
{% assign size = include.size | default: "small" %}
{% assign targetDate = include.date %}

{% assign demo = include.demo | default: "false" %}
{% if demo == "true" %}
  {% assign direction = "down" %}
  {% if name == "" %}{% assign name = "demo" %}{% endif %}
{% endif %}

<div class="row countdown countdown-{{ size }}">
    <div class="col-md-2">&nbsp;</div>
    {% if include.size == "large" %}
      <div class="col-md-2"><span class="cd{{ name }}Days">XX</span>&nbsp;<small>days</small></div>
      <div class="col-md-2"><span class="cd{{ name }}Hrs">XX</span>&nbsp;<small>hours</small></div>
      <div class="col-md-2"><span class="cd{{ name }}Mins">XX</span>&nbsp;<small>minutes</small></div>
      <div class="col-md-2"><span class="cd{{ name }}Secs">XX</span>&nbsp;<small>seconds</small></div>
    {% else %}
      <div class="col-md-2"><span class="cd{{ name }}Days">XX</span><br/><small>days</small></div>
      <div class="col-md-2"><span class="cd{{ name }}Hrs">XX</span><br/><small>hours</small></div>
      <div class="col-md-2"><span class="cd{{ name }}Mins">XX</span><br/><small>minutes</small></div>
      <div class="col-md-2"><span class="cd{{ name }}Secs">XX</span><br/><small>seconds</small></div>
    {% endif %}
    <div class="col-md-2">&nbsp;</div>
</div>

<script type="text/javascript">
var CountdownWidget = CountdownWidget || function (opts) {
  var self = this;

  var _second = 1000;
  var _minute = _second * 60;
  var _hour = _minute * 60;
  var _day = _hour * 24;

  this.name = opts.name;
  this.direction = opts.direction;
  this.targetDate = new Date(opts.targetDate);
  this.demo = opts.demo;

  if(this.demo == "true") {
    this.targetDate = new Date();
    this.targetDate.setDate(this.targetDate.getDate() + 3);
  } else {
    this.targetDate = new Date(opts.targetDate);
  }

  this.showRemaining = function() {
    var now = new Date();
    var distance = self.direction == "down" ? (self.targetDate - now) : (now - self.targetDate);
    if(self.direction == "down" && distance < 0) {
      distance = 0;
      clearInterval(self.timer);
    }

    $(".cd" + self.name + "Days").text(Math.floor(distance / _day));
    $(".cd" + self.name + "Hrs").text(Math.floor((distance % _day) / _hour));
    $(".cd" + self.name + "Mins").text(Math.floor((distance % _hour) / _minute));
    $(".cd" + self.name + "Secs").text(Math.floor((distance % _minute) / _second));
  };

  this.showRemaining();
  this.timer = setInterval(self.showRemaining, 333);
};

var countdownWidget_{{ name }} =
new CountdownWidget({
  name: "{{ name }}",
  demo: "{{ demo }}",
  direction: "{{ direction }}",
  targetDate: "{{ targetDate }}"
});
</script>
